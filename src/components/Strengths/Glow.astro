<style>
    /** Glow styles start **/
    :root {
    --radius: 34;
    --border: 2;
    --size: 300;
    --border-spot-opacity: 0.9;
    --border-light-opacity: 0.9;
    --cardblur: 4;
    --r: 0deg; /* Initial angle for button, firefox will be static */
    --base: 140;
    --spread: 10;
    --outer: 1;
  }

  /**  Start card styles **/

  /* Glow specific styles */
  [data-glow] {
    --border-size: calc(var(--border, 2) * 1px);
    --spotlight-size: calc(var(--size, 150) * 1px);
    --hue: calc(var(--base) + (var(--xp, 0) * var(--spread, 0)));
    background-image: radial-gradient(
      var(--spotlight-size) var(--spotlight-size) at calc(var(--x, 0) * 1px)
        calc(var(--y, 0) * 1px),
      hsl(
        var(--hue, 210) calc(var(--saturation, 100) * 1%)
          calc(var(--lightness, 70) * 1%) / var(--bg-spot-opacity, 0.1)
      ),
      transparent
    );
    background-position: 50% 50%;
    background-attachment: fixed;
    position: relative;
    touch-action: none;
  }

  [data-glow]::before,
  [data-glow]::after {
    pointer-events: none;
    content: "";
    position: absolute;
    inset: calc(var(--border-size) * -1);
    border: var(--border-size) solid transparent;
    border-radius: calc(var(--radius) * 1px);
    background-attachment: fixed;
    background-size: calc(100% + (2 * var(--border-size)))
      calc(100% + (2 * var(--border-size)));
    background-repeat: no-repeat;
    background-position: 50% 50%;
    mask: linear-gradient(transparent, transparent),
      linear-gradient(white, white);
    mask-clip: padding-box, border-box;
    mask-composite: intersect;
  }

  /* This is the emphasis light */
  [data-glow]::before {
    background-image: radial-gradient(
      calc(var(--spotlight-size) * 0.75) calc(var(--spotlight-size) * 0.75) at
        calc(var(--x, 0) * 1px) calc(var(--y, 0) * 1px),
      hsl(
        var(--hue, 210) calc(var(--saturation, 100) * 1%)
          calc(var(--lightness, 50) * 1%) / var(--border-spot-opacity, 1)
      ),
      transparent 100%
    );
    filter: brightness(2);
  }
  /* This is the spotlight */
  [data-glow]::after {
    background-image: radial-gradient(
      calc(var(--spotlight-size) * 0.5) calc(var(--spotlight-size) * 0.5) at
        calc(var(--x, 0) * 1px) calc(var(--y, 0) * 1px),
      hsl(0 100% 100% / var(--border-light-opacity, 1)),
      transparent 100%
    );
  }
  [data-glow] [data-glow] {
    position: absolute;
    inset: 0;
    will-change: filter;
    opacity: var(--outer, 1);
  }
  [data-glow] > [data-glow] {
    border-radius: calc(var(--radius) * 1px);
    border-width: calc(var(--border-size) * 20);
    filter: blur(calc(var(--border-size) * 10));
    background: none;
    pointer-events: none;
  }
  [data-glow] > [data-glow]::before {
    inset: -10px;
    border-width: 10px;
  }
  [data-glow] [data-glow] {
    border: none;
  }
  
  /** Glow styles end **/
</style>

<script>
  const syncPointer = (event: PointerEvent) => {
    const { clientX: x, clientY: y } = event;
    // x position
    document.documentElement.style.setProperty("--x", x.toFixed(2));

    // fraction of x position relative to window width
    document.documentElement.style.setProperty(
      "--xp",
      (x / window.innerWidth).toFixed(2)
    );

    // y position
    document.documentElement.style.setProperty("--y", y.toFixed(2));

    // fraction of y position relative to window height
    document.documentElement.style.setProperty(
      "--yp",
      (y / window.innerHeight).toFixed(2)
    );
  };

  document.body.addEventListener("pointermove", syncPointer);
</script>