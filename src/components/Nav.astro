<nav class="text-white flex justify-between items-center px-8 pt-10">
    <svg
      class="sm:hidden block"
      width="48"
      height="48"
      viewBox="0 0 48 48"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path d="M40 14H8" stroke="white" stroke-width="3" stroke-linecap="round"
      ></path>
      <path
        opacity="0.5"
        d="M40 24H8"
        stroke="#F2F1EB"
        stroke-width="3"
        stroke-linecap="round"></path>
      <path d="M40 34H8" stroke="white" stroke-width="3" stroke-linecap="round"
      ></path>
    </svg>
  <div class="text-primary text-3xl font-medula">CCC</div>
  <!-- spacer -->
  <div></div>
  <div class="text-light-1 gap-14 font-neuton hidden sm:flex">
    <a href="#" class="my-blur">PROJECTS</a>
    <a href="#" class="my-blur">COLLECTIVE</a>
    <a href="https://github.com/cozy-coders-collective" class="my-blur"
      >GITHUB</a
    >
    <a href="#" class="my-blur">CONTACT</a>
  </div>
</nav>
<svg
  width="100%"
  height="87"
  viewBox="0 0 1590 87"
  fill="none"
  xmlns="http://www.w3.org/2000/svg"
  class="mt-[-20px] squiggle-animated"
>
  <path
    d="M1 85.7946C214.86 57.7539 493 -11.1441 516.5 2.85586C540 16.8559 468 61.5 487 78C506 94.5 612 18.4389 632.5 25.5C653 32.5611 610 59 632.5 68C655 77 1591 40 1590.5 28"
    stroke="white"
    stroke-width="2"
    stroke-miterlimit="3.8637"></path>
</svg>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    //// nav squiggle animation
    let path: SVGGeometryElement | null = document.querySelector(
      ".squiggle-animated path"
    );
    if (path) {
      var length: number = path.getTotalLength();
      // Clear any previous transition
      path.style.transition = path.style.webkitTransition = "none";
      path.style.transition = "none";

      // Set up the starting positions
      path.style.strokeDasharray = length + " " + length;
      path.style.strokeDashoffset = length.toString();
      // Trigger a layout so styles are calculated & the browser
      // picks up the starting position before animating
      path.getBoundingClientRect();
      // Define our transition
      path.style.transition = path.style.webkitTransition =
        "stroke-dashoffset 2s ease-in-out";
      path.style.transition = path.style.transition =
        "stroke-dashoffset 2s ease-in-out";
      // Go!
      path.style.strokeDashoffset = "0";
    }

    //// blur nav links
    const items: NodeListOf<HTMLElement> =
      document.querySelectorAll(".my-blur");

    items.forEach((item, index) => {
      item.addEventListener("mouseover", function () {
        applyBlur(index, "2px");
      });

      item.addEventListener("mouseout", function () {
        applyBlur(index, "0px");
      });
    });

    function applyBlur(index: number, blurValue: string) {
      const duration = 290;
      // ease-in-out for a more balanced acceleration
      // and deceleration during both transitions
      const easing = "ease-in-out";

      items.forEach((item, i) => {
        const isHoveredItem = i === index;
        item.style.filter = `blur(${isHoveredItem ? "0" : blurValue})`;
        item.style.transition = `filter ${duration}ms ${easing}`;
      });
    }
  });
</script>
