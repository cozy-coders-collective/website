---
import Layout from "../layouts/Layout.astro";
import Nav from "../components/Nav.astro";
import Hero from "../components/Hero.astro";
import HeroCarousel from "../components/HeroCarousel.astro";
import Footsies from "../components/Footsies.astro";
import Contact from "../components/Contact.astro";
import Strengths from "../components/Strengths.astro";
import MobileNav from "../components/MobileNav.astro";
---

<Layout title="Cozy Coders' Collective - Home">
  <main>
    <Nav />
    <MobileNav />
    <Hero />
    <HeroCarousel
      index={0}
      blogPostPhotos={[
        {
          photoPath: "/resto.png",
        },
        {
          photoPath: "/resto.png",
        },
      ]}
    >
    </HeroCarousel>
    <div class="p-12">
      <h3 class="text-xl">absolutely fuck you, pal (unless)</h3>
    </div>
    <Strengths />
    <!-- <Services /> -->
    <Contact />
    <Footsies />
  </main>
</Layout>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    /// mobile nav menu
    const menuButton: HTMLElement | null =
      document.getElementById("menu-button");
    const mobileNavView: HTMLElement | null =
      document.getElementById("mobile-nav-view");
    const closeButton: HTMLElement | null =
      document.getElementById("close-button");
    const mobileNavViewButtons: HTMLCollectionOf<Element> | null =
      document.getElementsByClassName("mobile-nav-view-button");

    if (menuButton && mobileNavView) {
      menuButton.addEventListener("click", function () {
        mobileNavView.style.animationName = "slide-lr";
        mobileNavView.style.animationPlayState = "running";
        document.body.style.overflow = "hidden";
      });
    }

    if (closeButton && mobileNavView && mobileNavViewButtons) {
      closeButton.addEventListener("click", function () {
        mobileNavView.style.animationName = "slide-rl";
        document.body.style.overflow = "auto";
      });

      for (const button of mobileNavViewButtons) {
        button.addEventListener("click", function () {
          mobileNavView.style.animationName = "slide-rl";
          document.body.style.overflow = "auto";
        });
      }
    }

    //// nav squiggle animation
    let paths: NodeListOf<SVGGeometryElement> | null = document.querySelectorAll(
      ".squiggle-animated path"
    );
    if (paths) {
      for (let i = 0; i < paths.length; i++) {
        let path: SVGGeometryElement = paths[i];
        var length: number = path.getTotalLength();
        // Clear any previous transition
        path.style.transition = path.style.webkitTransition = "none";
        path.style.transition = "none";

        // Set up the starting positions
        path.style.strokeDasharray = length + " " + length;
        path.style.strokeDashoffset = length.toString();
        // Trigger a layout so styles are calculated & the browser
        // picks up the starting position before animating
        path.getBoundingClientRect();
        // Define our transition
        path.style.transition = path.style.webkitTransition =
          "stroke-dashoffset 2s ease-in-out";
        path.style.transition = path.style.transition =
          "stroke-dashoffset 2s ease-in-out";
        // Go!
        path.style.strokeDashoffset = "0";
      }
    }

    //// blur nav links
    const items: NodeListOf<HTMLElement> =
      document.querySelectorAll(".my-blur");

    items.forEach((item, index) => {
      item.addEventListener("mouseover", function () {
        applyBlur(index, "2px");
      });

      item.addEventListener("mouseout", function () {
        applyBlur(index, "0px");
      });
    });

    function applyBlur(index: number, blurValue: string) {
      const duration = 290;
      // ease-in-out for a more balanced acceleration
      // and deceleration during both transitions
      const easing = "ease-in-out";

      items.forEach((item, i) => {
        const isHoveredItem = i === index;
        item.style.filter = `blur(${isHoveredItem ? "0" : blurValue})`;
        item.style.transition = `filter ${duration}ms ${easing}`;
      });
    }
  });
</script>